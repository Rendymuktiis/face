{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\udemy react\\\\pure\\\\face-recognition-brain\\\\src\\\\App.js\";\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport React from 'react';\nimport Clarifai from 'clarifai';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'; // const Clarifai = require('clarifai')\n// import Clarifai from 'C:/Users/ASUS/Desktop/udemy react/facerecog/node_modules/clarifai/dist/index.js'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = new Clarifai.App({\n  apiKey: 'e8c616aec8a34b73adfd146d2db4b387'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.calculateFaceLocation = data => {\n      // console.log(\"masuk\")\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.onInputChange = event => {\n      // console.log(event.target.value)\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.calculateFaceLocation(response)) // console.log(response)\n      .catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/udemy react/pure/face-recognition-brain/src/App.js"],"names":["Navigation","Logo","ImageLinkForm","Rank","React","Clarifai","Particles","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","Component","constructor","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","onInputChange","event","setState","input","target","onButtonSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","box","render"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport React from 'react'\r\nimport Clarifai from 'clarifai';\r\nimport Particles from 'react-particles-js';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\r\n// const Clarifai = require('clarifai')\r\n// import Clarifai from 'C:/Users/ASUS/Desktop/udemy react/facerecog/node_modules/clarifai/dist/index.js'\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: 'e8c616aec8a34b73adfd146d2db4b387'\r\n });\r\n const particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      input : '',\r\n      imageUrl: '',\r\n      box : {},\r\n    }\r\n  }\r\n\r\n  calculateFaceLocation  =(data) =>{\r\n    // console.log(\"masuk\")\r\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById('inputimage');\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    console.log(width)\r\n    return {\r\n      leftCol: clarifaiFace.left_col * width,\r\n      topRow: clarifaiFace.top_row * height,\r\n      rightCol: width - (clarifaiFace.right_col * width),\r\n      bottomRow: height - (clarifaiFace.bottom_row * height)\r\n    }\r\n  }\r\n  onInputChange = (event) =>{\r\n    // console.log(event.target.value)\r\n    this.setState({input: event.target.value})\r\n  }\r\n  onButtonSubmit = () =>{\r\n    this.setState({imageUrl: this.state.input})\r\n\r\n    app.models.predict(\r\n      Clarifai.FACE_DETECT_MODEL,\r\n      this.state.input)\r\n      .then(\r\n        response => this.calculateFaceLocation(response))\r\n          // console.log(response)\r\n      .catch(err => console.log(err))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles className='particles'\r\n          params={particlesOptions}\r\n        />\r\n\r\n        <Navigation></Navigation>\r\n        <Logo></Logo>\r\n        <Rank></Rank>\r\n        <ImageLinkForm \r\n        onInputChange = {this.onInputChange}  \r\n        onButtonSubmit = {this.onButtonSubmit}>\r\n        </ImageLinkForm>\r\n        <FaceRecognition imageUrl = {this.state.imageUrl} ></FaceRecognition>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}